## About GitHub

print('About GitHub:')

print("git init - создает новый репозиторий Git и инициализация директории для отсдеживания контроля версии по проекту")
print("git status - Проверка состояния фпйлов")

print("git log - отображает отправленные снимки состояния и позволяет просматривать и фильтровать историю проекта, а также проводить поиск по ней")
print('Comments "log":')
## /n - перевод строки
print("git log --graph - визукльное состояние веток проекта /ngit log -n <limit> - Ограничивает число коммитов с помощью параметра")
print("git log --oneline и git log --stat - коммит в одну строку и получить подробный обзор всей истории проекта")
print("git log -p - выводит патчи, соответствующие определенным коммитам")
print('git log --author="<pattern>" - выполняет поиск коммитов конкретного автора /ngit log --grep="<pattern>" - выполняет поиск коммитов с сообщениями, соответствующими аргументу')
print("git log <file> - выводит только коммиты, содержащие указанный файл")
print("git log --graph --decorate --oneline - содержится несколько полезных параметров: флаг --graph создает основанную на тексте диаграмму коммитов в левой части области сообщений коммитов; флаг --decorate добавляет отображаемые имена веток или теги коммитов; флаг --oneline записывает информацию о коммите в одну строку, что позволяет без труда просматривать множество коммитов сразу")

print("git add . - всех файлов или указваем только нужные через пробел. Для исключения используем файл: .gitignore")

print("git diff - позволяет проанализировать добавляемые изменения и исправить возможные ошибки")

print("git commit - добавление проиндексированное сосотояние файлов. Атрибуты -m, создает коммит с указанным комментарием")
print("git rm - удаление отслеживаемого файла или отслеживаемых файлов из раздела проиндексированных файлов Git")
print("git mv - перемещает или переименовывает файлы, автоматически “уведомляя” об этих событиях область “Staging Area”:")

print("git branch - управления ветками в репозитории Git")
print('Comments "branch":')
## /n - перевод строки
print("git branch or git branch --list \ngit branch <branch> - создание ветки") 
print("git branch -d <branch> - удаление указанной ветки git branch -D <branch> - принудительное удаление указанной ветки")
print("git branch -m <branch> - изменение имени текущей ветки на /ngit branch -a - вывод списка всех удаленных веток")

print("git checkout - использоваться для переключения между ветками. Команда checkout используется для копирования файлов из истории или сцены в рабочую директорию.")

print("git clone - клонирования репозитория - используется для первоначального копирования репозитория, т.е. для создания копии,  скачает всю информацию")
print("git push - команда для получения последних изменений - используется именно для получения последних изменений, т.е. для получения той информации, что добавили ваши коллеги - скачает только последние изменения")
